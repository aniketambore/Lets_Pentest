#!/usr/bin/env python
"""
Title:    Packet Sniffer
Author:   Aniket Ambore
Date:     June 27, 2021
Comment:  Packet Sniffer - Capture packets flowing through an interface.

scapy Docs => https://scapy.readthedocs.io/en/latest/introduction.html
Through scapy module we can create different network tools like ARP Spoofer, Network Scanner, packet dumpers etc. This module can be used to create more advanced tools related to network security and ethical hacking.

argparse Docs => https://docs.python.org/3/library/argparse.html#module-argparse
"""

import scapy.all as scapy
from scapy.layers import http
import argparse
import sys
import time

FAIL = '\033[91m'
OKGREEN = '\033[92m'
OKCYAN = '\033[96m'
ORANGE = '\033[93m'
PURPLE = '\033[95m'


def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--interface", dest="interface",
                        help="Interface through which you want to capture the packets.")
    options = parser.parse_args()
    if not options.interface:
        parser.error(FAIL + "[-] Please specify an interface, use --help for more info.")
    return options


def sniff(interface):
    scapy.sniff(iface=interface, store=False, prn=process_sniffed_packet)


def get_host_path_url(packet):
    host = packet[http.HTTPRequest].Host
    path = packet[http.HTTPRequest].Path
    url = packet[http.HTTPRequest].Referer
    return host, path, url


def get_login_info(packet):
    load = packet[scapy.Raw].load
    keywords = ["uname", "username", "password", "pass", "login"]
    for keyword in keywords:
        if keyword in str(load):
            # print(load)
            # break
            return load


def process_sniffed_packet(packet):
    if packet.haslayer(http.HTTPRequest):
        # print(packet.show())
        if packet.haslayer(scapy.Raw):
            host, path, url = get_host_path_url(packet)
            print(OKGREEN + "[+] " + OKCYAN + "Host >> " + ORANGE + str(host))
            print(OKGREEN + "[+] " + OKCYAN + "Path >> " + ORANGE + str(path))
            print(OKGREEN + "[+] " + OKCYAN + "URL >> " + ORANGE + str(url))

            # print(packet[scapy.Raw].load)
            login_info = get_login_info(packet)
            print(
                "\n\n" + OKGREEN + "[+] " + OKCYAN + "Possible username/password " + ORANGE + str(login_info) + "\n\n")


def slowprint(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(0. / 100)


def script_header():
    slowprint('''\033[1;31m \033[95m
╔═╗┌─┐┌─┐┬┌─┌─┐┌┬┐  ╔═╗┌┐┌┬┌─┐┌─┐┌─┐┬─┐
╠═╝├─┤│  ├┴┐├┤  │   ╚═╗││││├┤ ├┤ ├┤ ├┬┘
╩  ┴ ┴└─┘┴ ┴└─┘ ┴   ╚═╝┘└┘┴└  └  └─┘┴└─
    ''')


options = get_arguments()
script_header()
sniff(options.interface)
